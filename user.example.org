#+TITLE: User custom configurations

Hi, welcome to your personal configuration!

Here you can organize your configurations the way you want.

* Must Have Config
#+begin_src emacs-lisp
;; Your name and e-mail
(setq user-full-name "Ot√°vio Schwanck dos Santos"
      user-mail-address "otavioschwanck@gmail.com")

;; Relative lines
;; (setq display-line-numbers-type 'visual)
;; or Common
(setq display-line-numbers-type t)

;; Set here your projects path here to use with SPC p p
(setq projectile-project-search-path '("~/Projetos" "~/Study"))
#+end_src
* Debugger Command
By default, the value of debugger is byebug.  To change, modify the variable below:
#+begin_src emacs-lisp
;; SPC d to put a debugger.  SPC D to delete all debuggers from the file
(setq debugger-command "byebug") ;; change from byebug to "require 'pry'; binding.pry" for example..
(setq pry-show-helper t) ;; show some helper, change to nil if you dont like

#+end_src

* Use Docker?
#+begin_src emacs-lisp
;; Rspec on docker?
;; (setq rspec-use-docker-when-possible t)
;; (setq rspec-docker-command "docker-compose run")
;; (setq rspec-docker-cwd "/app/")
;; (setq rspec-docker-container "rspec-container-name") ;; Name of the container to run rspec into
;; (setq projectile-rails-custom-server-command "docker-compose run web rails s")
;; (setq projectile-rails-custom-console-command "docker-compose run web rails c")

#+end_src
* Ignoring some folders on search
#+begin_src emacs-lisp
(setq projectile-globally-ignored-directories '("flow-typed" "node_modules" "~/.emacs.d/.local/" ".idea" ".vscode" ".ensime_cache" ".eunit" ".git" ".hg" ".fslckout" "_FOSSIL_" ".bzr" "_darcs" ".tox" ".svn" ".stack-work" ".ccls-cache" ".cache" ".clangd"))
#+end_src
* Org Files Directory
#+begin_src emacs-lisp
(setq org-directory "~/Dropbox/org/")
#+end_src
* Apparence
** Theme
#+begin_src emacs-lisp
;; You can see all the themes here: https://github.com/hlissner/emacs-doom-themes/tree/screenshots
;; Uncomment with gcc
(setq doom-theme 'doom-one)
#+end_src

** Font
#+begin_src emacs-lisp
;; To test teh new font, selectg the text below and press M-x eval-region and then, M-x doom/reload-font
;; (setq doom-font (font-spec :family "Fira Code" :size 14 :weight 'regular)
;;       doom-variable-pitch-font (font-spec :family "Fira Code" :size 15))
#+end_src

* Ruby Linters (rubocop)
#+begin_src emacs-lisp
;; Commands to run before rubocop (nice for docker)
;; (setq rubocop-append-command '("bundle" "exec"))

;; Disable Rubocop or any other lint if you want
;; (setq ruby-disabled-checkers '(ruby-reek lsp ruby-rubylint ruby-rubocop))
#+end_src

* Rbenv
#+begin_src emacs-lisp
;; If you use macos with rbenv on homebrew, add it
;; (setq rbenv-executable "/opt/homebrew/bin/rbenv")
#+end_src

* Use minitest?
Just uncomment the code above (without begin-src and end-src)

#+begin_src emacs-lisp
;; (defun goto-test ()
;;   (interactive)
;;   (find-file (file-path-to-test buffer-file-name)))

;; (defun goto-test-and-vsplit ()
;;   (interactive)
;;   (if (string-match-p "/test/" buffer-file-name) (find-file (file-path-to-test buffer-file-name)))
;;   (delete-other-windows)
;;   (evil-window-vsplit)
;;   (if (string-match-p "/app/" buffer-file-name) (find-file (file-path-to-test buffer-file-name))))

;; (defun file-path-to-test (filename)
;;   (if (string-match-p "/test/" filename)
;;       (if (string-match-p "/admin/" filename)
;;           (concat
;;            (replace-regexp-in-string "/test/controllers/" "/app/" (file-name-directory filename))
;;            (singularize-string (replace-regexp-in-string "_controller_test" "" (file-name-base filename)))
;;            "."
;;            (file-name-extension filename))
;;         (concat
;;          (replace-regexp-in-string "/test/" "/app/" (file-name-directory filename))
;;          (replace-regexp-in-string "_test" "" (file-name-base filename))
;;          "."
;;          (file-name-extension filename)))
;;     (if (string-match-p "/admin/" filename)
;;         (concat
;;          (replace-regexp-in-string "/app/" "/test/controllers/" (file-name-directory filename))
;;          (pluralize-string (file-name-base filename))
;;          "_controller_test."
;;          (file-name-extension filename))
;;       (concat
;;        (replace-regexp-in-string "/app/" "/test/" (file-name-directory filename))
;;        (file-name-base filename)
;;        "_test."
;;        (file-name-extension filename)))))

;; (after! rspec-mode
;;   (map! :mode ruby-mode :leader "tv" #'minitest-verify)
;;   (map! :mode ruby-mode :leader "ts" #'minitest-verify-single)
;;   (map! :mode ruby-mode :leader "tr" #'minitest-rerun)
;;   (map! :mode ruby-mode :leader "ta" #'minitest-verify-all))
#+end_src

* Add Your custom code here
#+begin_src emacs-lisp
;; Add your code here:

#+end_src

* Start with Magit
#+begin_src emacs-lisp
;; Comment to disable
(defun open-projectile-with-magit (&optional DIRECTORY CACHE)
  (interactive)
  (magit-status DIRECTORY)
  (if (fboundp 'magit-fetch-from-upstream)
      (call-interactively #'magit-fetch-from-upstream)
    (call-interactively #'magit-fetch-current)))

(setq +workspaces-switch-project-function #'open-projectile-with-magit)
#+end_src
